if(!self.define){let e,s={};const i=(i,n)=>(i=new URL(i+".js",n).href,s[i]||new Promise(s=>{if("document"in self){const e=document.createElement("script");e.src=i,e.onload=s,document.head.appendChild(e)}else e=i,importScripts(i),s()}).then(()=>{let e=s[i];if(!e)throw new Error(`Module ${i} didnâ€™t register its module`);return e}));self.define=(n,r)=>{const a=e||("document"in self?document.currentScript.src:"")||location.href;if(s[a])return;let l={};const o=e=>i(e,a),t={module:{uri:a},exports:l,require:o};s[a]=Promise.all(n.map(e=>t[e]||o(e))).then(e=>(r(...e),l))}}define(["./workbox-5ebd127d"],function(e){"use strict";self.skipWaiting(),e.clientsClaim(),e.precacheAndRoute([{url:"assets/CatalogPage-DmwR6DOj.js",revision:null},{url:"assets/index-Cehn6f0d.css",revision:null},{url:"assets/index-HsKwDOAa.js",revision:null},{url:"assets/InvoiceViewer-BMl_Td2p.js",revision:null},{url:"assets/OffersPage-Cb5dD9uW.js",revision:null},{url:"assets/ProductDetailPage-Ce5gnyvO.js",revision:null},{url:"assets/ProductFilters-4vrLVmQF.js",revision:null},{url:"assets/ProductGrid-DH-NILNo.js",revision:null},{url:"assets/Products-DHol5PU-.js",revision:null},{url:"assets/StoresPage-CAct5SRO.js",revision:null},{url:"icons/pwa-192.png",revision:"57daa63979a5bb7933aa920cd61fd4b6"},{url:"icons/pwa-512.png",revision:"deb6dc44db60ee9fa35d0efbe3983cf1"},{url:"index.html",revision:"24949a88f34c5ab4ea3a18e53eec1ea4"},{url:"logo.svg",revision:"567224a694988c8d50a417365471731e"},{url:"registerSW.js",revision:"1872c500de691dce40960bb85481de07"},{url:"vite.svg",revision:"8e3a10e157f75ada21ab742c022d5430"},{url:"icons/pwa-192.png",revision:"57daa63979a5bb7933aa920cd61fd4b6"},{url:"icons/pwa-512.png",revision:"deb6dc44db60ee9fa35d0efbe3983cf1"},{url:"manifest.webmanifest",revision:"5114a26c6d7dd3d4a94d872ebe207a5b"}],{}),e.cleanupOutdatedCaches(),e.registerRoute(new e.NavigationRoute(e.createHandlerBoundToURL("/index.html"))),e.registerRoute(({url:e})=>e.pathname.startsWith("/api/"),new e.NetworkFirst({cacheName:"api-cache",networkTimeoutSeconds:8,plugins:[new e.CacheableResponsePlugin({statuses:[0,200]})]}),"GET"),e.registerRoute(({request:e})=>"image"===e.destination,new e.StaleWhileRevalidate({cacheName:"image-cache",plugins:[new e.CacheableResponsePlugin({statuses:[0,200]})]}),"GET")});
